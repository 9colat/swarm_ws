
/tmp/arduino-sketch-1A5AB903302D1BEDD698E1DA3B58D00C/motor_strait_driving.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
0000c4ac l    d  .fini	00000000 .fini
0000c4b0 l    d  .ARM.exidx	00000000 .ARM.exidx
1fff0000 l    d  .usbdescriptortable	00000000 .usbdescriptortable
1fff0200 l    d  .dmabuffers	00000000 .dmabuffers
1fff03d0 l    d  .usbbuffers	00000000 .usbbuffers
1fff0730 l    d  .data	00000000 .data
1fff1418 l    d  .bss	00000000 .bss
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 mk20dx128.c
00006634 l     F .text	0000000c startup_default_early_hook
00006640 l     F .text	00000002 startup_default_late_hook
00000000 l    df *ABS*	00000000 crtstuff.c
00000410 l     F .text	00000000 __do_global_dtors_aux
1fff1418 l       .bss	00000000 completed.8605
00000434 l     F .text	00000000 frame_dummy
1fff141c l       .bss	00000000 object.8610
0000c4a4 l     O .text	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 motor_strait_driving.ino.cpp
000013a0 l     F .text	000000cc ros::NodeHandle_<ArduinoHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*) [clone .part.8] [clone .constprop.10]
000046a8 l     F .text	00000274 _GLOBAL__sub_I_bmp
0000c0dc l     O .text	0000001c rosserial_msgs::REQUESTPARAM
00000000 l    df *ABS*	00000000 I2Cdev.cpp
00000000 l    df *ABS*	00000000 WireKinetis.cpp
00004e98 l       .text	00000000 L_1373_delayMicroseconds
00004ea6 l       .text	00000000 L_1387_delayMicroseconds
00004eec l       .text	00000000 L_1438_delayMicroseconds
00005222 l       .text	00000000 L_2952_delayMicroseconds
1fff2c00 l     O .bss	00000001 TwoWire::isr()::receiving
00000000 l    df *ABS*	00000000 MPU9250.cpp
00000000 l    df *ABS*	00000000 Adafruit_BMP280.cpp
00005650 l     F .text	00000054 Adafruit_BMP280::readTemperature() [clone .part.1]
00000000 l    df *ABS*	00000000 Adafruit_I2CDevice.cpp
00005aac l     F .text	00000028 Adafruit_I2CDevice::write(unsigned char const*, unsigned int, bool, unsigned char const*, unsigned int) [clone .part.2]
00000000 l    df *ABS*	00000000 Adafruit_SPIDevice.cpp
00005d96 l       .text	00000000 L_709_delayMicroseconds
00005de8 l       .text	00000000 L_770_delayMicroseconds
00005ed0 l       .text	00000000 L_999_delayMicroseconds
00000000 l    df *ABS*	00000000 SPI.cpp
00006198 l     F .text	000001f8 SPIClass::transfer(void const*, void*, unsigned int) [clone .part.10]
00000000 l    df *ABS*	00000000 time.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 pins_teensy.c
000066d8 l     F .text	00000002 dummy_isr
1fff0730 l     F .data	0000002c port_E_isr
1fff075c l     F .data	0000002c port_D_isr
1fff0788 l     F .data	0000002c port_C_isr
1fff07b4 l     F .data	0000002c port_B_isr
1fff07e0 l     F .data	0000002c port_A_isr
000066dc l     F .text	0000004c digitalWrite.part.1
00006728 l     F .text	00000078 pinMode.part.2
1fff0b18 l     O .data	00000001 analog_write_res
00000000 l    df *ABS*	00000000 usb_dev.c
1fff2c08 l     O .bss	00000004 ep0_tx_ptr
1fff2c0c l     O .bss	00000010 rx_last
1fff2c1c l     O .bss	00000002 ep0_tx_len
1fff2c20 l     O .bss	00000040 ep0_rx0_buf
1fff2c60 l     O .bss	00000010 rx_first
1fff2c70 l     O .bss	00000001 ep0_tx_data_toggle
1fff2c74 l     O .bss	00000040 ep0_rx1_buf
1fff2cb4 l     O .bss	00000010 tx_first
1fff0000 l     O .usbdescriptortable	000000a0 table
1fff2cc4 l     O .bss	00000010 tx_last
1fff2cd4 l     O .bss	00000008 setup
1fff2cdc l     O .bss	00000001 ep0_tx_bdt_bank
1fff2ce0 l     O .bss	00000008 reply_buffer
1fff2cec l     O .bss	00000004 tx_state
00000000 l    df *ABS*	00000000 usb_mem.c
1fff0b1c l     O .data	00000004 usb_buffer_available
00000000 l    df *ABS*	00000000 usb_serial.c
1fff2cf1 l     O .bss	00000001 tx_noautoflush
1fff2cf4 l     O .bss	00000004 tx_packet
1fff2cf8 l     O .bss	00000001 transmit_previous_timeout
1fff2cfc l     O .bss	00000004 rx_packet
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 WString.cpp
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 yield.cpp
1fff2d15 l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 analog.c
1fff2d16 l     O .bss	00000001 calibrating
1fff0b31 l     O .data	00000001 analog_config_bits
1fff2d17 l     O .bss	00000001 analog_reference_internal
1fff0b32 l     O .data	00000001 analog_num_average
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 usb_desc.c
1fff0b34 l     O .data	00000012 device_descriptor
1fff0b60 l     O .data	00000043 config_descriptor
00000000 l    df *ABS*	00000000 serialEvent.cpp
00000000 l    df *ABS*	00000000 w_atan2.c
00000000 l    df *ABS*	00000000 w_pow.c
00000000 l    df *ABS*	00000000 e_atan2.c
00000000 l    df *ABS*	00000000 e_pow.c
00000000 l    df *ABS*	00000000 e_sqrt.c
00000000 l    df *ABS*	00000000 s_atan.c
0000c440 l     O .text	00000020 atanlo
0000c460 l     O .text	00000020 atanhi
00000000 l    df *ABS*	00000000 s_fabs.c
00000000 l    df *ABS*	00000000 s_finite.c
00000000 l    df *ABS*	00000000 s_matherr.c
00000000 l    df *ABS*	00000000 s_nan.c
00000000 l    df *ABS*	00000000 s_rint.c
0000c480 l     O .text	00000010 TWO52
00000000 l    df *ABS*	00000000 s_scalbn.c
00000000 l    df *ABS*	00000000 s_copysign.c
00000000 l    df *ABS*	00000000 atexit_arm.cc
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_unorddf2.o
00000000 l    df *ABS*	00000000 _arm_fixdfsi.o
00000000 l    df *ABS*	00000000 _arm_truncdfsf2.o
00000000 l    df *ABS*	00000000 _arm_addsubsf3.o
00000000 l    df *ABS*	00000000 _aeabi_ldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 cxa_atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 realloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 lib_a-strcmp.o
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 strncpy.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
0000b968 l     F .text	00000014 register_fini
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 impure.c
1fff0bd8 l     O .data	00000428 impure_data
00000000 l    df *ABS*	00000000 /home/nicoleg/Arduino/hardware/tools/arm/bin/../lib/gcc/arm-none-eabi/5.4.1/armv7e-m/fpu/crti.o
00000000 l    df *ABS*	00000000 /home/nicoleg/Arduino/hardware/tools/arm/bin/../lib/gcc/arm-none-eabi/5.4.1/armv7e-m/fpu/crtn.o
00000000 l    df *ABS*	00000000 s_lib_ver.c
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 
1fff1418 l       .bss	00000000 __bss_start__
1fff2d80 l       .bss	00000000 __bss_end__
00000000 l       *UND*	00000000 software_init_hook
00000000 l       *UND*	00000000 hardware_init_hook
00000000 l       *UND*	00000000 __stack
0000662c  w    F .text	00000006 adc0_isr
00000968  w    F .text	00000008 custom_msgs::odom_and_imu::getType()
0000a178 g     F .text	0000002c .hidden __aeabi_dcmpun
00007a18 g     F .text	0000001c usb_serial_available
0000a13c g     F .text	00000012 .hidden __aeabi_dcmple
0000b69c g     F .text	000000ba strcpy
000056a4 g     F .text	00000054 Adafruit_BMP280_Temp::getEvent(sensors_event_t*)
1fff1d40 g     O .bss	00000008 old_time_right
0000a078 g     F .text	0000007a .hidden __cmpdf2
00009640 g     F .text	0000000e fabs
00007dd4  w    F .text	000000ec yield
0000a078 g     F .text	0000007a .hidden __eqdf2
00007fdc g     F .text	0000003c analogWriteDAC1
1fff0b48 g     O .data	00000018 usb_string_manufacturer_name_default
1fff2b30 g     O .bss	00000028 wheel_speed
1fff08f4 g     O .data	0000006c Wire1
00000ca8  w    F .text	00000148 rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const
00009be8 g     F .text	0000005a .hidden __floatdidf
000065e4  w    F .text	00000048 hard_fault_isr
0000662c  w    F .text	00000006 dma_ch6_isr
00004cf0 g     F .text	00000130 TwoWire::isr()
1fff2ba2 g     O .bss	00000002 accel_Y
0000662c  w    F .text	00000006 uart0_lon_isr
00006ed4 g     F .text	00000084 usb_rx_memory
1fff0810 g     O .data	00000004 mag_y_cal
0000662c  w    F .text	00000006 dma_ch8_isr
0000af98 g     F .text	00000002 __malloc_unlock
1fff0964 g     O .data	00000078 isr_table_portA
00007ec0 g     F .text	000000e0 analog_init
00006f58 g     F .text	00000084 usb_tx
0000662c  w    F .text	00000006 portcd_isr
0000146c  w    F .text	00000174 ros::Subscriber<geometry_msgs::Twist, void>::callback(unsigned char*)
1fff2bb0 g     O .bss	00000040 bmp
0000bc94  w    O .text	00000018 vtable for std_msgs::Float32
00005b9c g     F .text	0000007c Adafruit_I2CDevice::_read(unsigned char*, unsigned int, bool)
1fff14a0 g     O .bss	00000008 goal_omega_left
0000c17c g     O .text	0000001c vtable for Adafruit_BMP280_Temp
0000ae30 g     F .text	000000c6 memmove
1fff2a80 g     O .bss	00000008 old_time_left
0000bd0c  w    O .text	00000014 vtable for ros::NodeHandle_<ArduinoHardware, 25, 25, 512, 512>
0000662c  w    F .text	00000006 can1_rx_warn_isr
0000c4b8 g       .ARM.exidx	00000000 __exidx_end
0000662c  w    F .text	00000006 dma_error_isr
00001e38 g     F .text	00000084 setPWM(int, int)
1fff2d14 g     O .bss	00000001 EventResponder::runningFromYield
00005244 g     F .text	0000000c i2c0_isr
0000a068 g     F .text	0000008a .hidden __gtdf2
0000a844 g     F .text	0000000c __errno
1fff1438 g     O .bss	00000020 data_measured_angle
0000662c  w    F .text	00000006 portd_isr
0000662c  w    F .text	00000006 enet_error_isr
0000c138 g     O .text	00000020 TwoWire::i2c2_hardware
1fff2d04 g     O .bss	00000004 EventResponder::firstInterrupt
0000bcac  w    O .text	00000018 vtable for geometry_msgs::Vector3
00000628  w    F .text	00000008 rosserial_msgs::Log::getMD5()
0000174c  w    F .text	00000300 custom_msgs::odom_and_imu::deserialize(unsigned char*)
0000662c  w    F .text	00000006 tpm1_isr
00000494  w    F .text	0000003c std_msgs::Time::deserialize(unsigned char*)
00000ebc  w    F .text	00000008 usb_serial_class::write(unsigned char const*, unsigned int)
0000098c  w    F .text	00000006 ros::NodeHandle_<ArduinoHardware, 25, 25, 512, 512>::connected()
00001ebc g     F .text	000001a4 speed_PID_controller(double, double, double, double, double, double, double)
0000c1bc g     O .text	00000200 digital_pin_to_info_PGM
1fff2d7c g     O .bss	00000004 errno
0000c4b8 g       .ARM.exidx	00000000 _etext
1fff1418 g       .bss	00000000 _sbss
1fff1c7c g     O .bss	00000002 accel_Z
00004b68 g     F .text	00000070 I2Cdev::writeBits(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, void*)
0000a104 g     F .text	00000010 .hidden __aeabi_cdcmple
0000bc64  w    O .text	00000018 vtable for rosserial_msgs::RequestParamResponse
1fff2a90 g     O .bss	00000080 data_measured_odom_and_imu
0000a2a0 g     F .text	00000160 .hidden __aeabi_fadd
00000620  w    F .text	00000008 rosserial_msgs::Log::getType()
0000a29c g     F .text	00000164 .hidden __subsf3
1fff1d3c g     O .bss	00000004 current_omega_right
1fff1468 g     O .bss	00000014 right_tick_pub
0000662c  w    F .text	00000006 porte_isr
00002948 g     F .text	00000fcc loop
0000662c  w    F .text	00000006 portb_isr
0000662c  w    F .text	00000006 spi1_isr
0000662c  w    F .text	00000006 uart3_status_isr
0000662c  w    F .text	00000006 mcm_isr
00004af4 g     F .text	00000018 I2Cdev::writeByte(unsigned char, unsigned char, unsigned char, void*)
00004f0c g     F .text	00000114 TwoWire::endTransmission(unsigned char)
00000640  w    F .text	00000010 std_msgs::Int16::serialize(unsigned char*) const
1fff2b9c g     O .bss	00000004 current_time
1fff2d08 g     O .bss	00000004 EventResponder::lastInterrupt
0000662c  w    F .text	00000006 uart1_status_isr
0000643c g     F .text	000001a6 memcpy
0000662c  w    F .text	00000006 randnum_isr
0000a0f4 g     F .text	00000020 .hidden __aeabi_cdrcmple
000021f4 g     F .text	0000021c RGB_led_set(String const&)
00009b78 g     F .text	00000022 .hidden __floatsidf
00000868  w    F .text	000000e0 geometry_msgs::Quaternion::deserialize(unsigned char*)
1fff0a3c g     O .data	00000030 isr_table_portC
1fff2c04 g     O .bss	00000004 systick_millis_count
0000a070 g     F .text	00000082 .hidden __ltdf2
000052bc g     F .text	00000078 MPU9250::getMotion6(short*, short*, short*, short*, short*, short*)
000065e4  w    F .text	00000048 bus_fault_isr
00004e20 g     F .text	000000ec TwoWire::wait_idle()
0000662c  w    F .text	00000006 watchdog_isr
00005250 g     F .text	0000000c i2c1_isr
1fff2ce8 g     O .bss	00000001 usb_configuration
0000662c  w    F .text	00000006 dma_ch11_isr
00005b20 g     F .text	0000001e Adafruit_I2CDevice::begin(bool)
00000000  w      *UND*	00000000 __fini_array_end
1fff2bf8 g     O .bss	00000008 error_l
0000525c g     F .text	0000000c i2c2_isr
000068bc g     F .text	00000340 analogWrite
1fff0b48  w    O .data	00000018 usb_string_manufacturer_name
1fff2d68 g     O .bss	00000008 usb_rx_byte_count_data
0000662c  w    F .text	00000006 pit1_isr
0000a8a0 g     F .text	00000010 malloc
0000662c  w    F .text	00000006 dma_ch4_isr
0000c118 g     O .text	00000020 TwoWire::i2c1_hardware
0000662c  w    F .text	00000006 software_isr
0000662c  w    F .text	00000006 dma_ch7_isr
00004928  w    F .text	0000001e TwoWire::read()
0000a408 g     F .text	0000001c .hidden __aeabi_i2f
00007850 g     F .text	000000c4 usb_init
1fff2a88 g     O .bss	00000008 cum_error_l
0000662c  w    F .text	00000006 lptmr_isr
1fff1c98 g     O .bss	00000004 bool_tele_op_toggel
1fff2d3c g     O .bss	00000004 __malloc_top_pad
00006898 g     F .text	00000024 rtc_set
1fff080c g     O .data	00000000 .hidden __dso_handle
00005cb4 g     F .text	00000012 Adafruit_SPIDevice::~Adafruit_SPIDevice()
00009b58 g     F .text	0000001e .hidden __aeabi_ui2d
00004b0c g     F .text	0000005c I2Cdev::writeBit(unsigned char, unsigned char, unsigned char, unsigned char, void*)
1fff0730 g       .data	00000000 _sdata
0000c0f8 g     O .text	00000020 TwoWire::i2c0_hardware
000066a4 g     F .text	00000034 kinetis_hsrun_enable
0000a550 g     F .text	000002e2 .hidden __udivmoddi4
00007cdc g     F .text	0000002a String::reserve(unsigned int)
00000668  w    F .text	00000008 std_msgs::Int16::getMD5()
000098d4 g     F .text	00000000 .hidden __aeabi_drsub
00000970  w    F .text	00000008 custom_msgs::odom_and_imu::getMD5()
0000b38c g     F .text	00000024 _sbrk_r
00005c64 g     F .text	00000050 Adafruit_I2CDevice::write_then_read(unsigned char const*, unsigned int, unsigned char*, unsigned int, bool)
000001d0 g     F .text	00000200 ResetHandler
000079a0 g     F .text	00000048 usb_serial_getchar
00000950  w    F .text	00000008 geometry_msgs::Quaternion::getMD5()
0000662c  w    F .text	00000006 can1_bus_off_isr
1fff0818 g     O .data	00000002 I2Cdev::readTimeout
0000662c  w    F .text	00000006 ftm2_isr
1fff2d70 g     O .bss	00000008 usb_cdc_line_coding
1fff1d38 g     O .bss	00000004 pwm_procent_left
00006bfc g     F .text	0000000a digitalWrite
1fff2d0c g     O .bss	00000004 EventResponder::lastYield
0000662c  w    F .text	00000006 uart5_status_isr
0000662c  w    F .text	00000006 lpuart0_status_isr
0000c3e4 g     O .text	00000004 usb_endpoint_config_table
0000662c  w    F .text	00000006 dma_ch9_isr
1fff148c g     O .bss	00000004 average_omega_right
0000662c  w    F .text	00000006 pit2_isr
1fff2bf4 g     O .bss	00000004 reference_angle
0000a128 g     F .text	00000012 .hidden __aeabi_dcmplt
1fff2d38 g     O .bss	00000004 __malloc_max_sbrked_mem
00006c08 g     F .text	0000000a pinMode
00007954 g     F .text	0000004c usb_free
0000662c  w    F .text	00000006 i2c3_isr
00009b9c g     F .text	0000003a .hidden __extendsfdf2
00009e98 g     F .text	000001d0 .hidden __aeabi_ddiv
1fff1c94 g     O .bss	00000004 temperature
000098e0 g     F .text	00000276 .hidden __adddf3
1fff081c g     O .data	0000006c Wire2
0000578c g     F .text	000000b4 Adafruit_BMP280::begin(unsigned char, unsigned char)
0000c4b0 g       .ARM.exidx	00000000 __exidx_start
00009c44 g     F .text	00000254 .hidden __aeabi_dmul
0000662c  w    F .text	00000006 pit0_isr
1fff0bd7 g     O .data	00000001 __fdlib_version
1fff2d10 g     O .bss	00000004 EventResponder::firstYield
00004a9c g     F .text	00000058 I2Cdev::writeBytes(unsigned char, unsigned char, unsigned char, unsigned char*, void*)
1fff1492 g     O .bss	00000002 my
0000c490 g     O .text	00000004 _global_impure_ptr
0000662c  w    F .text	00000006 can1_error_isr
0000afac g     F .text	000003de _realloc_r
0000a850 g     F .text	00000050 __libc_init_array
1fff2d80 g       .bss	00000000 __bss_end
0000491c  w    F .text	0000000c TwoWire::available()
0000662c  w    F .text	00000006 can0_wakeup_isr
1fff2bac g     O .bss	00000004 measured_angle
0000662c  w    F .text	00000006 flash_cmd_isr
00005020 g     F .text	00000224 TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)
00007db8  w    F .text	00000004 usb_serial_class::clear()
00009b58 g     F .text	0000001e .hidden __floatunsidf
0000662c  w    F .text	00000006 uart2_status_isr
00006644 g     F .text	0000002c _sbrk
1fff1d5c g     O .bss	00000004 pwm_procent_right
000006ac  w    F .text	00000008 std_msgs::Float32::getType()
000067a0 g     F .text	000000f8 attachInterrupt
1fff0960 g     O .data	00000004 __brkval
1fff2d00 g     O .bss	00000001 usb_cdc_line_rtsdtr
00000670  w    F .text	0000001a std_msgs::Float32::serialize(unsigned char*) const
00007c2c g     F .text	00000048 usb_serial_flush_callback
0000c494 g     F .text	00000000 _init
00007ccc g     F .text	0000000e String::~String()
00005334 g     F .text	00000084 MPU9250::getMotion9(short*, short*, short*, short*, short*, short*, short*, short*, short*)
0000662c  w    F .text	00000006 svcall_isr
000054e4 g     F .text	00000040 Adafruit_BMP280::~Adafruit_BMP280()
0000662c  w    F .text	00000006 dma_ch15_isr
0000bc34  w    O .text	00000018 vtable for rosserial_msgs::TopicInfo
0000a1f4 g     F .text	0000009e .hidden __aeabi_d2f
0000bcc4  w    O .text	00000018 vtable for geometry_msgs::Quaternion
0000a29c g     F .text	00000164 .hidden __aeabi_fsub
0000c158 g     O .text	00000024 vtable for TwoWire
0000097c  w    F .text	00000008 ros::Subscriber<geometry_msgs::Twist, void>::getMsgType()
0000662c  w    F .text	00000006 uart1_error_isr
0000b988 g     F .text	00000028 __libc_fini_array
00002060 g     F .text	00000194 imu_collection()
0000662c  w    F .text	00000006 usbhs_phy_isr
1fff2d80 g       .bss	00000000 _ebss
000053d4  w    F .text	0000000e Adafruit_BMP280_Pressure::~Adafruit_BMP280_Pressure()
1fff1c78 g     O .bss	00000004 bmp_temp
00005ad4 g     F .text	00000012 Adafruit_I2CDevice::Adafruit_I2CDevice(unsigned char, TwoWire*)
00009678 g     F .text	00000128 rint
000053e4 g     F .text	0000004c Adafruit_BMP280_Temp::getSensor(sensor_t*)
000007e0  w    F .text	00000088 geometry_msgs::Quaternion::serialize(unsigned char*) const
00005270 g     F .text	0000004c MPU9250::initialize()
0000a1a4 g     F .text	0000004e .hidden __fixdfsi
0000662c g     F .text	00000006 unused_isr
0000662c  w    F .text	00000006 spi0_isr
0000a434 g     F .text	0000007c .hidden __floatdisf
1fff0814 g     O .data	00000004 mag_x_cal
0000662c  w    F .text	00000006 dma_ch3_isr
00007d08 g     F .text	00000042 String::copy(char const*, unsigned int)
00008428 g     F .text	000001ec __ieee754_atan2
1fff2b58 g     O .bss	00000004 bmp_pressure
00000978  w    F .text	00000004 ros::Subscriber<geometry_msgs::Twist, void>::getEndpointType()
0000bc4c  w    O .text	00000018 vtable for rosserial_msgs::Log
00007db4 g     F .text	00000004 operator delete(void*, unsigned int)
0000662c  w    F .text	00000006 flash_error_isr
00005ae8 g     F .text	00000036 Adafruit_I2CDevice::detected()
000098e0 g     F .text	00000276 .hidden __aeabi_dadd
0000a070 g     F .text	00000082 .hidden __ledf2
1fff2b98 g     O .bss	00000004 left_count_tick
00007ccc g     F .text	0000000e String::~String()
0000662c  w    F .text	00000006 uart5_error_isr
0000662c  w    F .text	00000006 rtc_seconds_isr
0000662c  w    F .text	00000006 pdb_isr
00009bd8 g     F .text	0000006a .hidden __aeabi_ul2d
000065e4  w    F .text	00000048 usage_fault_isr
0000662c  w    F .text	00000006 dac1_isr
00000000 g     O .text	000001d0 _VectorsFlash
0000662c  w    F .text	00000006 dma_ch14_isr
00005c18 g     F .text	0000004a Adafruit_I2CDevice::read(unsigned char*, unsigned int, bool)
00000630  w    F .text	00000008 rosserial_msgs::RequestParamResponse::getType()
00000000  w      *UND*	00000000 __deregister_frame_info
1fff2d78 g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
1fff1480 g     O .bss	00000008 last_error_left
00007cbc g     F .text	00000010 systick_isr
0000662c  w    F .text	00000006 rtc_alarm_isr
0000662c  w    F .text	00000006 dma_ch2_isr
1fff0b20 g     O .data	00000010 Serial
0000662c  w    F .text	00000006 ftm1_isr
0000c1a0 g     O .text	0000001c vtable for Adafruit_BMP280_Pressure
00007dcc  w    F .text	00000006 usb_serial_class::write(unsigned char)
00006634  w    F .text	0000000c startup_early_hook
0000662c  w    F .text	00000006 dma_ch13_isr
0000662c  w    F .text	00000006 uart2_error_isr
1fff1c9c g     O .bss	00000008 angle_of_wheel
000079e8 g     F .text	00000030 usb_serial_peekchar
0000a164 g     F .text	00000012 .hidden __aeabi_dcmpgt
1fff2b78 g     O .bss	00000008 goal_omega_right
00003914  w    F .text	0000053c ros::NodeHandle_<ArduinoHardware, 25, 25, 512, 512>::negotiateTopics()
1fff0bc0 g     O .data	00000016 usb_string_serial_number_default
000065e4 g     F .text	00000048 fault_isr
0000ba4c g     F .text	000001d0 _free_r
0000a150 g     F .text	00000012 .hidden __aeabi_dcmpge
0000662c  w    F .text	00000006 usb_charge_isr
00007dc4  w    F .text	00000004 usb_serial_class::flush()
1fff2b5c g     O .bss	00000008 left_tick
0000662c  w    F .text	00000006 cmt_isr
000098dc g     F .text	0000027a .hidden __aeabi_dsub
0000662c  w    F .text	00000006 usbhs_isr
1fff1410 g     O .data	00000004 __malloc_sbrk_base
0000046c  w    F .text	00000028 std_msgs::Time::serialize(unsigned char*) const
00000ec4  w    F .text	00000004 usb_serial_class::read()
0000662c  w    F .text	00000006 ftm3_isr
1fff2ba0 g     O .bss	00000002 accel_X
0000662c  w    F .text	00000006 tsi0_isr
00009bd8 g     F .text	0000006a .hidden __floatundidf
00000958  w    F .text	00000008 geometry_msgs::Twist::getType()
0000662c  w    F .text	00000006 spi2_isr
000080ec g     F .text	00000004 atan2
1fff2b10 g     O .bss	00000014 ankle_pub
0000a408 g     F .text	0000001c .hidden __floatsisf
00000b20 g     F .text	00000188 encoder_count_chage_left()
000080e8  w    F .text	00000002 serialEvent()
1fff2c71 g     O .bss	00000001 usb_reboot_timer
0000b8c4 g     F .text	000000a4 __register_exitproc
1fff14a8 g     O .bss	000007d0 speed_array_left
000053bc  w    F .text	00000002 Adafruit_BMP280_Pressure::~Adafruit_BMP280_Pressure()
00007a34 g     F .text	00000038 usb_serial_flush_input
1fff0aac g     O .data	0000006c isr_table_portE
00008618 g     F .text	00000b10 __ieee754_pow
0000bc1c  w    O .text	00000018 vtable for std_msgs::Time
000080f0 g     F .text	00000338 pow
00007b74 g     F .text	00000018 usb_serial_putchar
00000022 g       *ABS*	00000000 _teensy_model_identifier
00005aa8 g     F .text	00000004 Adafruit_BMP280::getPressureSensor()
0000b85c g     F .text	00000066 strncpy
1fff2d40 g     O .bss	00000028 __malloc_current_mallinfo
1fff2d18 g     O .bss	00000018 HardwareSerial::s_serials_with_serial_events
0000662c  w    F .text	00000006 can0_bus_off_isr
00005840 g     F .text	0000021c Adafruit_BMP280::readPressure()
000026b4 g     F .text	000000ac cmd_velocity(geometry_msgs::Twist&)
0000af9c g     F .text	00000010 realloc
1fff2cdd g     O .bss	00000001 usb_rx_memory_needed
00006fdc g     F .text	00000874 usb_isr
0000a838 g     F .text	0000000c __cxa_atexit
00005568 g     F .text	00000046 Adafruit_BMP280::read8(unsigned char)
1fff2b94 g     O .bss	00000004 previous_time
00009b78 g     F .text	00000022 .hidden __aeabi_i2d
000005d8  w    F .text	00000046 rosserial_msgs::Log::deserialize(unsigned char*)
0000c3bc  w    O .text	00000028 vtable for usb_serial_class
0000662c  w    F .text	00000006 uart3_error_isr
00007d4c g     F .text	00000026 String::String(char const*)
1fff1c90 g     O .bss	00000004 average_omega_left
0000a424 g     F .text	0000008c .hidden __floatundisf
00000ec8  w    F .text	000001e6 rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)
0000a834  w    F .text	00000002 .hidden __aeabi_ldiv0
0000662c  w    F .text	00000006 porta_isr
00009e98 g     F .text	000001d0 .hidden __divdf3
000056f8 g     F .text	00000094 Adafruit_BMP280::readCoefficients()
000053bc  w    F .text	00000002 Adafruit_BMP280_Pressure::~Adafruit_BMP280_Pressure()
1fff1d48 g     O .bss	00000014 left_tick_pub
1fff2ba8 g     O .bss	00000002 gyro_Z
1fff03d0 g     O .usbbuffers	00000360 usb_buffer_memory
0000662c  w    F .text	00000006 low_voltage_isr
1fff1004 g     O .data	00000408 __malloc_av_
0000a400 g     F .text	00000024 .hidden __aeabi_ui2f
0000662c  w    F .text	00000006 can0_error_isr
00006d00 g     F .text	0000016c _init_Teensyduino_internal_
00009c44 g     F .text	00000254 .hidden __muldf3
1fff1d08 g     O .bss	00000008 right_tick
00007bd4 g     F .text	00000058 usb_serial_flush_output
0000662c  w    F .text	00000006 dma_ch12_isr
0000af94 g     F .text	00000002 __malloc_lock
00000000  w      *UND*	00000000 __fini_array_start
0000662c  w    F .text	00000006 can1_wakeup_isr
1fff2ba4 g     O .bss	00000002 gyro_X
1fff0200 g     O .dmabuffers	000001d0 _VectorsRam
00001bb8 g     F .text	00000280 omega_to_pwm(double)
00007d74 g     F .text	0000002c String::equals(char const*) const
0000662c  w    F .text	00000006 pit3_isr
00006390 g     F .text	0000007c SPIClass::begin()
1fff0b30 g     O .data	00000001 yield_active_check_flags
0000662c  w    F .text	00000006 enet_rx_isr
0000662c  w    F .text	00000006 portc_isr
0000bd20  w    O .text	00000018 vtable for ros::Subscriber<geometry_msgs::Twist, void>
1fff2bf0 g     O .bss	00000004 current_omega_left
000004d8  w    F .text	00000008 std_msgs::Time::getMD5()
1fff22b0 g     O .bss	000007d0 speed_array_right
0000aef8 g     F .text	0000009a memset
000055fc g     F .text	00000054 Adafruit_BMP280::read24(unsigned char)
00007da0 g     F .text	00000010 main
00000960  w    F .text	00000008 geometry_msgs::Twist::getMD5()
1fff2d34 g     O .bss	00000004 __malloc_max_total_mem
0000a434 g     F .text	0000007c .hidden __aeabi_l2f
000007d8  w    F .text	00000008 geometry_msgs::Vector3::getMD5()
0000547c g     F .text	00000068 Adafruit_BMP280::Adafruit_BMP280(TwoWire*)
000065e4  w    F .text	00000048 memmanage_fault_isr
000010b0  w    F .text	000000e8 geometry_msgs::Twist::serialize(unsigned char*) const
1fff1498 g     O .bss	00000008 encoder_counter_left
00009660 g     F .text	00000004 matherr
00008064 g     F .text	00000084 usb_init_serialnumber
0000a1f4 g     F .text	0000009e .hidden __truncdfsf2
0000c4ac g       .text	00000000 __init_array_end
0000a8c0 g     F .text	00000570 _malloc_r
1fff2d30 g     O .bss	00000001 HardwareSerial::s_count_serials_with_serial_events
0000662c  w    F .text	00000006 debugmonitor_isr
000053c0  w    F .text	00000002 Adafruit_BMP280_Temp::~Adafruit_BMP280_Temp()
00009be8 g     F .text	0000005a .hidden __aeabi_l2d
00004948 g     F .text	00000154 I2Cdev::readBytes(unsigned char, unsigned char, unsigned char, unsigned char*, unsigned short, void*)
00001a4c  w    F .text	0000016c ros::NodeHandle_<ArduinoHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)
1fff0a6c g     O .data	00000040 isr_table_portD
00005ad4 g     F .text	00000012 Adafruit_I2CDevice::Adafruit_I2CDevice(unsigned char, TwoWire*)
0000068c  w    F .text	00000020 std_msgs::Float32::deserialize(unsigned char*)
1fff2298 g     O .bss	00000004 direction_indicator_right
0000640c g     F .text	00000008 SPIClass::transfer(void const*, void*, unsigned int)
62483d0a g       *ABS*	00000000 __rtc_localtime
00006c14 g     F .text	00000048 micros
00000000  w      *UND*	00000000 __libc_fini
0000a424 g     F .text	0000008c .hidden __aeabi_ul2f
0000662c  w    F .text	00000006 cmp1_isr
0000662c  w    F .text	00000006 ftm0_isr
1fff1d60 g     O .bss	00000004 direction_indicator_left
00000df0  w    F .text	00000032 rosserial_msgs::Log::serialize(unsigned char*) const
0000b9b0 g     F .text	0000009c _malloc_trim_r
1fff0bbc g     O .data	00000004 string0
00007a6c g     F .text	00000108 usb_serial_write
1fff2b80 g     O .bss	00000014 measured_angle_pub
00009650 g     F .text	00000010 finite
00006640  w    F .text	00000002 startup_late_hook
00007dc0  w    F .text	00000004 usb_serial_class::available()
0000b3c8 g     F .text	000002dc strcmp
1fff0bd6 g     O .data	00000001 _serialEvent_default
1fff0ba4  w    O .data	00000016 usb_string_product_name
00005b40 g     F .text	0000005c Adafruit_I2CDevice::write(unsigned char const*, unsigned int, bool, unsigned char const*, unsigned int)
00005cb4 g     F .text	00000012 Adafruit_SPIDevice::~Adafruit_SPIDevice()
000098ac g     F .text	0000001a copysign
00006c5c g     F .text	000000a4 delay
0000a078 g     F .text	0000007a .hidden __nedf2
0000662c  w    F .text	00000006 tpm0_isr
0000c4ac g     F .fini	00000000 _fini
00004c34 g     F .text	00000026 TwoWire::write(unsigned char)
000092c8 g     F .text	00000378 atan
1fff1c80 g     O .bss	0000000f accelgyro
000004e0  w    F .text	000000e8 rosserial_msgs::TopicInfo::deserialize(unsigned char*)
0000662c  w    F .text	00000006 i2s0_rx_isr
0000662c  w    F .text	00000006 uart4_error_isr
00000998 g     F .text	00000188 encoder_count_chage_right()
0000b97c g     F .text	0000000c atexit
00005a5c g     F .text	00000048 Adafruit_BMP280_Pressure::getEvent(sensors_event_t*)
1fff1d18 g     O .bss	00000014 speed_pub
00005524 g     F .text	00000042 Adafruit_BMP280::write8(unsigned char, unsigned char)
0000a294 g     F .text	0000016c .hidden __aeabi_frsub
00007d4c g     F .text	00000026 String::String(char const*)
1fff1ca8 g     O .bss	00000060 sub_cmd_vel
0000662c  w    F .text	00000006 can0_message_isr
00000638  w    F .text	00000008 rosserial_msgs::RequestParamResponse::getMD5()
1fff1000 g     O .data	00000004 _impure_ptr
0000662c  w    F .text	00000006 can1_message_isr
000097a0 g     F .text	0000010c scalbn
0000662c  w    F .text	00000006 nmi_isr
1fff1d30 g     O .bss	00000008 encoder_counter_right
1fff0888 g     O .data	0000006c Wire
1fff229c g     O .bss	00000014 odom_and_IMU_pub
0000bcf4  w    O .text	00000018 vtable for custom_msgs::odom_and_imu
0000c4a0 g       .text	00000000 __preinit_array_end
000004d0  w    F .text	00000008 std_msgs::Time::getType()
0000662c  w    F .text	00000006 sdhc_isr
1fff2b70 g     O .bss	00000002 mz
00004bdc  w    F .text	00000016 TwoWire::peek()
000006b4  w    F .text	00000008 std_msgs::Float32::getMD5()
00004bf4  w    F .text	00000002 TwoWire::flush()
00002760 g     F .text	000001e8 setup
0000c3e8 g     O .text	00000054 usb_descriptor_list
00006e6c g     F .text	0000003c usb_rx
1fff1d64 g     O .bss	00000534 nh
0000662c  w    F .text	00000006 dma_ch10_isr
0000662c  w    F .text	00000006 uart0_error_isr
0000547c g     F .text	00000068 Adafruit_BMP280::Adafruit_BMP280(TwoWire*)
00009668 g     F .text	00000010 nan
00005ee0 g     F .text	00000158 Adafruit_SPIDevice::write(unsigned char*, unsigned int, unsigned char*, unsigned int)
00007914 g     F .text	00000040 usb_malloc
000005d0  w    F .text	00000008 rosserial_msgs::TopicInfo::getMD5()
0000bcdc  w    O .text	00000018 vtable for geometry_msgs::Twist
0000662c  w    F .text	00000006 i2s0_isr
00009128 g     F .text	000001a0 __ieee754_sqrt
20030000 g       .bss	00000000 _estack
00007b8c g     F .text	00000048 usb_serial_write_buffer_free
0000662c  w    F .text	00000006 enet_timer_isr
00000724  w    F .text	000000aa geometry_msgs::Vector3::deserialize(unsigned char*)
0000a114 g     F .text	00000012 .hidden __aeabi_dcmpeq
00005cc8 g     F .text	0000006c Adafruit_SPIDevice::begin()
000006bc  w    F .text	00000068 geometry_msgs::Vector3::serialize(unsigned char*) const
00004bf8 g     F .text	0000003a TwoWire::write(unsigned char const*, unsigned int)
1fff1414 g       .data	00000000 _edata
000053c0  w    F .text	00000002 Adafruit_BMP280_Temp::~Adafruit_BMP280_Temp()
0000662c  w    F .text	00000006 i2s0_tx_isr
0000662c  w    F .text	00000006 adc1_isr
00000984  w    F .text	00000008 ros::Subscriber<geometry_msgs::Twist, void>::getMsgMD5()
00007dc8  w    F .text	00000004 usb_serial_class::availableForWrite()
00000e24  w    F .text	00000098 rosserial_msgs::TopicInfo::serialize(unsigned char*) const
0000662c  w    F .text	00000006 cmp0_isr
00008018 g     F .text	0000004c ultoa
000053c4  w    F .text	0000000e Adafruit_BMP280_Temp::~Adafruit_BMP280_Temp()
00004c5c g     F .text	00000094 TwoWire::begin()
000053b8  w    F .text	00000002 Adafruit_Sensor::enableAutoRange(bool)
00007db0 g     F .text	00000004 operator new(unsigned int)
00007c74 g     F .text	00000044 EventResponder::runFromInterrupt()
1fff140c g     O .data	00000004 __malloc_trim_threshold
00007dbc  w    F .text	00000004 usb_serial_class::peek()
1fff2b74 g     O .bss	00000004 time_now
0000a400 g     F .text	00000024 .hidden __floatunsisf
0000a1a4 g     F .text	0000004e .hidden __aeabi_d2iz
00005430 g     F .text	0000004c Adafruit_BMP280_Pressure::getSensor(sensor_t*)
1fff2cf0 g     O .bss	00000001 usb_cdc_transmit_flush_timer
00000948  w    F .text	00000008 geometry_msgs::Quaternion::getType()
0000662c  w    F .text	00000006 pit_isr
000015e0  w    F .text	0000016c geometry_msgs::Twist::deserialize(unsigned char*)
00007fa0 g     F .text	0000003c analogWriteDAC0
00003e50  w    F .text	00000858 ros::NodeHandle_<ArduinoHardware, 25, 25, 512, 512>::spinOnce()
0000662c  w    F .text	00000006 dac0_isr
0000c4a0 g       .text	00000000 __init_array_start
0000a834  w    F .text	00000002 .hidden __aeabi_idiv0
0000662c  w    F .text	00000006 can1_tx_warn_isr
0000a178 g     F .text	0000002c .hidden __unorddf2
1fff1488 g     O .bss	00000004 right_count_tick
0000662c  w    F .text	00000006 uart0_status_isr
0000662c  w    F .text	00000006 mcg_isr
1fff1d10 g     O .bss	00000008 last_error_right
00000400 g     O .text	00000010 flashconfigbytes
0000b780 g     F .text	000000dc strlen
0000a104 g     F .text	00000010 .hidden __aeabi_cdcmpeq
00001198  w    F .text	00000208 custom_msgs::odom_and_imu::serialize(unsigned char*) const
0000a068 g     F .text	0000008a .hidden __gedf2
1fff0ba4 g     O .data	00000016 usb_string_product_name_default
0000662c  w    F .text	00000006 dma_ch1_isr
00005268 g     F .text	00000006 MPU9250::MPU9250()
00006ea8 g     F .text	0000002c usb_tx_packet_count
00000660  w    F .text	00000008 std_msgs::Int16::getType()
00009b9c g     F .text	0000003a .hidden __aeabi_f2d
0000662c  w    F .text	00000006 dma_ch5_isr
0000662c  w    F .text	00000006 can0_rx_warn_isr
1fff1490 g     O .bss	00000002 mx
0000662c  w    F .text	00000006 can0_tx_warn_isr
0000662c  w    F .text	00000006 uart4_status_isr
00000000  w      *UND*	00000000 _Jv_RegisterClasses
000098dc g     F .text	0000027a .hidden __subdf3
00006670 g     F .text	00000034 kinetis_hsrun_disable
0000c4a0 g       .text	00000000 __preinit_array_start
1fff1458 g     O .bss	00000008 error_r
0000a4b0 g     F .text	00000000 .hidden __aeabi_ldivmod
00002410 g     F .text	000002a4 wheel_speed_set(double, double, int)
00000650  w    F .text	0000000e std_msgs::Int16::deserialize(unsigned char*)
000098c8 g     F .text	0000000a __aeabi_atexit
1fff2b28 g     O .bss	00000008 cum_error_r
00000000  w      *UND*	00000000 __register_frame_info
1fff2ba6 g     O .bss	00000002 gyro_Y
0000662c  w    F .text	00000006 cmp2_isr
0000a2a0 g     F .text	00000160 .hidden __addsf3
00007cb8 g     F .text	00000004 pendablesrvreq_isr
000005c8  w    F .text	00000008 rosserial_msgs::TopicInfo::getType()
00004bd8  w    F .text	00000004 Print::availableForWrite()
1fff09dc g     O .data	00000060 isr_table_portB
0000662c  w    F .text	00000006 wakeup_isr
1fff1460 g     O .bss	00000008 delta_time_right
000007d0  w    F .text	00000008 geometry_msgs::Vector3::getType()
0000bc7c  w    O .text	00000018 vtable for std_msgs::Int16
000055b0 g     F .text	0000004c Adafruit_BMP280::read16(unsigned char)
1fff2b68 g     O .bss	00000008 delta_time_left
00005268 g     F .text	00000006 MPU9250::MPU9250()
000054e4 g     F .text	00000040 Adafruit_BMP280::~Adafruit_BMP280()
0000662c  w    F .text	00000006 cmp3_isr
00006038 g     F .text	00000160 Adafruit_SPIDevice::write_then_read(unsigned char*, unsigned int, unsigned char*, unsigned int, unsigned char)
00005aa4 g     F .text	00000004 Adafruit_BMP280::getTemperatureSensor()
00005d34 g     F .text	000001ac Adafruit_SPIDevice::transfer(unsigned char*, unsigned int)
0000a8b0 g     F .text	00000010 free
00006414 g     F .text	00000028 ros::normalizeSecNSec(unsigned long&, unsigned long&)
0000662c  w    F .text	00000006 tpm2_isr
0000662c  w    F .text	00000006 dma_ch0_isr
1fff0bc0  w    O .data	00000016 usb_string_serial_number
0000662c  w    F .text	00000006 enet_tx_isr


